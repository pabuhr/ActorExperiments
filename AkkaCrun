#!/bin/sh -

sbtflags="--warn -J-Xmx32g"

hostname=`hostname`
if [ "${hostname}" = "plg2" ] ; then
    startcore=0
elif [ "${hostname}" = "plg7b" ] ; then
    startcore=0
elif [ "${hostname}" = "nasus" ] ; then
    startcore=128
elif [ "${hostname}" = "jax" ] ; then
    startcore=24
elif [ "${hostname}" = "pyke" ] ; then
    startcore=0
else
    echo "unsupported host" ${hostname}
    exit 1
fi

for benchmark in static dynamic become ; do
    cd ./AkkaC/${benchmark}
    rm -rf project target			# random out of memory errors without this
    taskset -c ${startcore} /usr/bin/time -f "%Uu %Ss %Er %Mkb" sbt ${sbtflags} "run" | grep -v "Slf4jLogger started"
    cd - > /dev/null
done

cd ./AkkaC/executor
rm -rf project target				# random out of memory errors without this

for bt in 1 10 100 ; do
    echo "batch ${bt}"
    #p=1
    #while [ ${p} -le 32 ] ; do
    for p in 1 2 4 8 16 24 32 ; do
	sed -i "s/parallelism-min = .*/parallelism-min = ${p}/g" application.conf
	sed -i "s/parallelism-max = .*/parallelism-max = ${p}/g" application.conf
	echo "${p} processor"
	taskset -c ${startcore}-`expr ${startcore} + ${p} - 1` /usr/bin/time -f "%Uu %Ss %Er %Mkb" sbt ${sbtflags} "run d d d ${p} ${bt}" | grep -v "Slf4jLogger started"
	#p=`expr ${p} + 1`
	sbt clean > /dev/null
    done
done

# reset
sed -i "s/parallelism-min = .*/parallelism-min = 1/g" application.conf
sed -i "s/parallelism-max = .*/parallelism-max = 1/g" application.conf
cd - > /dev/null
